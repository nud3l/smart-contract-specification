requires "../rules.k"

module PROOF-PURE_ADD_FAIL
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// Pure_add
rule
  <k> #execute ~> CONTINUATION => #halt ~> CONTINUATION </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> _ => _ </output>
      <statusCode> _ => EVMC_REVERT </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806325c40c211461007d57806329fcda33146100cc5780633019162614610117578063771602f714610166578063b67d77c5146101b1578063c8a4ac9c146101fc575b600080fd5b34801561008957600080fd5b506100b26004803603810190808035906020019092919080359060200190929190505050610247565b604051808215151515815260200191505060405180910390f35b3480156100d857600080fd5b506101016004803603810190808035906020019092919080359060200190929190505050610265565b6040518082815260200191505060405180910390f35b34801561012357600080fd5b5061014c60048036038101908080359060200190929190803590602001909291905050506102ed565b604051808215151515815260200191505060405180910390f35b34801561017257600080fd5b5061019b600480360381019080803590602001909291908035906020019092919050505061030b565b6040518082815260200191505060405180910390f35b3480156101bd57600080fd5b506101e66004803603810190808035906020019092919080359060200190929190505050610390565b6040518082815260200191505060405180910390f35b34801561020857600080fd5b506102316004803603810190808035906020019092919080359060200190929190505050610415565b6040518082815260200191505060405180910390f35b60008183101561025a576001905061025f565b600090505b92915050565b600081830190508281101515156102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f6f766572666c6f7700000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80905092915050565b6000818314156103005760019050610305565b600090505b92915050565b6000828284019150811015151561038a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f6f766572666c6f7700000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284039150811115151561040f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f756e646572666c6f77000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b60008083141561042857600090506104b5565b818383850281151561043657fe5b041415156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f6f766572666c6f7700000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b81830290508090505b929150505600a165627a7a723058201068aeaea90bc4fe87b49d94ed3a54cf39a450a4e246b100aeb1ee296a9f54c50029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806325c40c211461007d57806329fcda33146100cc5780633019162614610117578063771602f714610166578063b67d77c5146101b1578063c8a4ac9c146101fc575b600080fd5b34801561008957600080fd5b506100b26004803603810190808035906020019092919080359060200190929190505050610247565b604051808215151515815260200191505060405180910390f35b3480156100d857600080fd5b506101016004803603810190808035906020019092919080359060200190929190505050610265565b6040518082815260200191505060405180910390f35b34801561012357600080fd5b5061014c60048036038101908080359060200190929190803590602001909291905050506102ed565b604051808215151515815260200191505060405180910390f35b34801561017257600080fd5b5061019b600480360381019080803590602001909291908035906020019092919050505061030b565b6040518082815260200191505060405180910390f35b3480156101bd57600080fd5b506101e66004803603810190808035906020019092919080359060200190929190505050610390565b6040518082815260200191505060405180910390f35b34801561020857600080fd5b506102316004803603810190808035906020019092919080359060200190929190505050610415565b6040518082815260200191505060405180910390f35b60008183101561025a576001905061025f565b600090505b92915050565b600081830190508281101515156102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f6f766572666c6f7700000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80905092915050565b6000818314156103005760019050610305565b600090505b92915050565b6000828284019150811015151561038a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f6f766572666c6f7700000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284039150811115151561040f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f756e646572666c6f77000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b60008083141561042857600090506104b5565b818383850281151561043657fe5b041415156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f6f766572666c6f7700000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b81830290508090505b929150505600a165627a7a723058201068aeaea90bc4fe87b49d94ed3a54cf39a450a4e246b100aeb1ee296a9f54c50029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("add", #uint256(ABI_A), #uint256(ABI_B)) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> VCallDepth => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> _ => VLog </log>
        <refund> _ => VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID) _ </activeAccounts>
      <accounts>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack("0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806325c40c211461007d57806329fcda33146100cc5780633019162614610117578063771602f714610166578063b67d77c5146101b1578063c8a4ac9c146101fc575b600080fd5b34801561008957600080fd5b506100b26004803603810190808035906020019092919080359060200190929190505050610247565b604051808215151515815260200191505060405180910390f35b3480156100d857600080fd5b506101016004803603810190808035906020019092919080359060200190929190505050610265565b6040518082815260200191505060405180910390f35b34801561012357600080fd5b5061014c60048036038101908080359060200190929190803590602001909291905050506102ed565b604051808215151515815260200191505060405180910390f35b34801561017257600080fd5b5061019b600480360381019080803590602001909291908035906020019092919050505061030b565b6040518082815260200191505060405180910390f35b3480156101bd57600080fd5b506101e66004803603810190808035906020019092919080359060200190929190505050610390565b6040518082815260200191505060405180910390f35b34801561020857600080fd5b506102316004803603810190808035906020019092919080359060200190929190505050610415565b6040518082815260200191505060405180910390f35b60008183101561025a576001905061025f565b600090505b92915050565b600081830190508281101515156102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f6f766572666c6f7700000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80905092915050565b6000818314156103005760019050610305565b600090505b92915050565b6000828284019150811015151561038a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f6f766572666c6f7700000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284039150811115151561040f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f756e646572666c6f77000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b60008083141561042857600090506104b5565b818383850281151561043657fe5b041415156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f6f766572666c6f7700000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b81830290508090505b929150505600a165627a7a723058201068aeaea90bc4fe87b49d94ed3a54cf39a450a4e246b100aeb1ee296a9f54c50029") </code>
          <storage> (_:Map)
           </storage>
          <nonce> _ </nonce>
        </account>
       ... 
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires #rangeAddress(ACCT_ID)
andBool #notPrecompileAddress(ACCT_ID)
andBool #rangeAddress(CALLER_ID)
andBool #rangeAddress(ORIGIN_ID)
andBool #rangeUInt(48, TIME)
andBool #rangeUInt(256, BAL)
andBool VCallDepth <=Int 1024
  andBool #rangeUInt(256, ABI_A)
  andBool #rangeUInt(256, ABI_B)
  andBool VGas >Int 500
  andBool notBool (
            (#rangeUInt(256, ABI_A +Int ABI_B))
  ) 

endmodule
